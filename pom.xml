<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 1. Родительский POM: Наследуем все базовые настройки от Spring Boot -->
    <!-- Это управляет версиями зависимостей и предоставляет разумные дефолты -->
    <parent>ls
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.5</version> <!-- Вы можете выбрать более новую версию, например 3.x.x -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 2. Координаты проекта: Уникальный идентификатор нашего приложения -->
    <groupId>com.example</groupId>
    <artifactId>simple-todo-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>simple-todo-app</name>
    <description>A simple To-Do List application for DevOps showcase</description>

    <!-- 3. Свойства: Централизованное управление версиями и другими параметрами -->
    <properties>
        <java.version>17</java.version>
    </properties>

    <!-- 4. Зависимости: Библиотеки, необходимые нашему приложению -->
    <dependencies>
        <!-- Для создания веб-приложений и REST API -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Для работы с базой данных через JPA (Hibernate) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Для создания веб-интерфейса (HTML шаблоны) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- Для эндпоинтов мониторинга (/actuator/health), необходимых для Kubernetes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Встраиваемая база данных H2. Scope 'runtime' означает, что она нужна только при запуске -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Для написания и запуска тестов. Scope 'test' означает, что она не попадет в финальный JAR -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- 5. Сборка: Как Maven должен собирать наш проект -->
    <build>
        <plugins>
            <!-- Основной плагин Spring Boot, который упаковывает приложение в исполняемый JAR -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- !!! BEST PRACTICE !!! -->
                    <!-- Включаем создание "слоеного" JAR для эффективной сборки Docker-образов -->
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>